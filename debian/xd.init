#!/bin/sh
### BEGIN INIT INFO
# Provides:          XD
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Standalone I2P BitTorrent Client
### END INIT INFO

# Author: r4sas <r4sas@i2pmail.org>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Standalone I2P BitTorrent Client"   # Introduce a short description here
NAME=XD                   # Introduce the short server's name here
DAEMON=/usr/bin/$NAME       # Introduce the server's location here
PIDFILE=/var/run/$NAME.pid
XDCONF=/etc/$NAME/xd.ini
XDHOME=/var/lib/XD
USER="debian-xd"

# Exit if the package is not installed
[ -x $DAEMON ] || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

# Function that starts the daemon/service
do_start()
{
  # Return
  #   0 if daemon has been started
  #   1 if daemon was already running
  #   2 if daemon could not be started

  start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --chuid "$USER" --test > /dev/null \
    || return 1
  start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --chuid "$USER" --chdir $XDHOME -- \
    $XDCONF > /dev/null 2>&1 \
    || return 2
  return $?
}

# Function that stops the daemon/service
do_stop()
{
  # Return
  #   0 if daemon has been stopped
  #   1 if daemon was already stopped
  #   2 if daemon could not be stopped
  #   other if a failure occurred
  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
  return "$?"
}

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC " "$NAME"
    do_start
    case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  restart|reload|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1)
      do_start
      case "$?" in
        0) log_end_msg 0 ;;
        1) log_end_msg 1 ;; # Old process is still running
        *) log_end_msg 1 ;; # Failed to start
      esac
      ;;
      *)
        # Failed to stop
        log_end_msg 1
      ;;
    esac
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}" >&2
    exit 3
  ;;
esac

:
